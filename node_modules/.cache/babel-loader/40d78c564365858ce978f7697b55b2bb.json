{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucam\\\\OneDrive\\\\Desktop\\\\excercise strive\\\\M3\\\\m4-d6-hw\\\\src\\\\components\\\\AddComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, useEffect, useState } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComment = () => {\n  _s();\n\n  const [comment, setComment] = useState({\n    comment: '',\n    rate: 1,\n    elementId: null\n  }); // state = {\n  //     comment: {\n  //         comment: '',\n  //         rate: 1,\n  //         elementId: null\n  //     }\n  // }\n  // componentDidUpdate(prevProps); {\n  //     if (prevProps.asin !== this.props.asin) {\n  //         this.setState({\n  //             comment: {\n  //                 ...this.state.comment,\n  //                 elementId: this.props.asin\n  //             }\n  //         })\n  //     }\n  // }\n\n  const handleChange = (property, value) => {\n    setComment({ ...comment,\n      [property]: value\n    });\n  };\n\n  const sendComment = async e => {\n    e.preventDefault();\n\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\n        method: 'POST',\n        body: JSON.stringify(comment),\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\n        }\n      });\n\n      if (response.ok) {\n        // the comment has been sent successfully!!\n        // let data=await response.json()\n        setComment({\n          comment: '',\n          rate: 1,\n          elementId: null\n        });\n        alert('Comment was sent!');\n      } else {\n        console.log('error');\n        alert('something went wrong');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: sendComment,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Comment text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Add comment here\",\n          value: comment.comment,\n          onChange: e => handleChange('comment', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: comment.rate,\n          onChange: e => handleChange('rate', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddComment, \"IGKfgt9PNIefA8ayYFkPCvCTaZc=\");\n\n_c = AddComment;\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"sources":["C:/Users/lucam/OneDrive/Desktop/excercise strive/M3/m4-d6-hw/src/components/AddComment.jsx"],"names":["Component","useEffect","useState","Button","Form","AddComment","comment","setComment","rate","elementId","handleChange","property","value","sendComment","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","console","log","error","target"],"mappings":"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","sourcesContent":["import { Component, useEffect, useState } from \"react\";\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nconst AddComment=()=> {\r\n    const [comment, setComment]=useState({\r\n                                            comment: '',\r\n                                            rate: 1,\r\n                                            elementId: null\r\n                                        })\r\n    // state = {\r\n    //     comment: {\r\n    //         comment: '',\r\n    //         rate: 1,\r\n    //         elementId: null\r\n    //     }\r\n    // }\r\n    \r\n    // componentDidUpdate(prevProps); {\r\n    //     if (prevProps.asin !== this.props.asin) {\r\n    //         this.setState({\r\n    //             comment: {\r\n    //                 ...this.state.comment,\r\n    //                 elementId: this.props.asin\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    const handleChange=(property, value)=>{\r\n        setComment({\r\n            ...comment,\r\n            [property]:value\r\n        })\r\n    }\r\n\r\n  const  sendComment = async (e) => {\r\n      e.preventDefault()\r\n        try {\r\n            let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\r\n                method: 'POST',\r\n                body: JSON.stringify(comment),\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\r\n}\r\n            })\r\n            if (response.ok) {\r\n                // the comment has been sent successfully!!\r\n                // let data=await response.json()\r\n                 setComment({\r\n                    comment: '',\r\n                    rate: 1,\r\n                    elementId: null\r\n                 })\r\n                alert('Comment was sent!')\r\n            } else {\r\n                console.log('error')\r\n                alert('something went wrong')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n        return (\r\n            <div>\r\n                <Form onSubmit={sendComment}>\r\n                    <Form.Group>\r\n                        <Form.Label>Comment text</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Add comment here\"\r\n                            value={comment.comment}\r\n                            onChange={(e)=>handleChange(\r\n                                                    'comment', e.target.value\r\n                                                )}\r\n                                   \r\n                            \r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as=\"select\" value={comment.rate}\r\n                            onChange={(e) => handleChange(\r\n                                                    'rate', e.target.value\r\n                                                )\r\n                                         }\r\n                            >\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default AddComment"]},"metadata":{},"sourceType":"module"}