{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucam\\\\OneDrive\\\\Desktop\\\\excercise strive\\\\M3\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = () => {\n  _s();\n\n  const [comments, setComment] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false); // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n\n  const useEffect = asin => {\n    getComment({\n      asin\n    });\n  };\n\n  const getComment = async ({\n    asin\n  }) => {\n    if (asin !== asin) {\n      setIsLoading(true);\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\n          headers: {\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\n          }\n        });\n        console.log(response);\n\n        if (response.ok) {\n          let comments = await response.json();\n          setComment({\n            comments: comments\n          });\n          setIsLoading(false);\n          setIsError(true);\n        } else {\n          console.log('error'); // this.setState({ isLoading: false, isError: true })\n\n          setIsLoading(false);\n          setIsError(true);\n        }\n      } catch (error) {\n        console.log(error); // this.setState({ isLoading: false, isError: true })\n\n        setIsLoading(false);\n        setIsError(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [setIsLoading() && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 36\n    }, this), setIsError() && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      setComment: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"H9oYhM2+YfeoGjIYaAhPh5HlCH4=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/lucam/OneDrive/Desktop/excercise strive/M3/m4-d6-hw/src/components/CommentArea.jsx"],"names":["Component","useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","comments","setComment","isLoading","setIsLoading","isError","setIsError","asin","getComment","response","fetch","props","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAOC,WAAW,GAAE,MAAK;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAUC,UAAV,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAqBZ,QAAQ,CAAC,KAAD,CAAnC,CAHyB,CAKzB;AACA;AACA;AACA;AACA;;AACA,QACAC,SAAS,GAAGY,IAAD,IAAQ;AACfC,IAAAA,UAAU,CAAC;AAACD,MAAAA;AAAD,KAAD,CAAV;AACH,GAHD;;AAII,QAAMC,UAAU,GAAG,OAAO;AAACD,IAAAA;AAAD,GAAP,KAAkB;AACjC,QAAIA,IAAI,KAAKA,IAAb,EAAmB;AACfH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACA,YAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyD,KAAKC,KAAL,CAAWJ,IAArE,EAA2E;AACjGK,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AADwF,SAA3E,CAA1B;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,YAAIA,QAAQ,CAACO,EAAb,EAAiB;AACb,cAAIf,QAAQ,GAAG,MAAMQ,QAAQ,CAACQ,IAAT,EAArB;AACAf,UAAAA,UAAU,CAAC;AAAED,YAAAA,QAAQ,EAAEA;AAAZ,WAAD,CAAV;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH,SALD,MAKO;AACHQ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADG,CAEH;;AACAX,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAlBD,CAkBE,OAAOY,KAAP,EAAc;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EADY,CAEZ;;AACAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;AACJ,GA5BD;;AA6BI,sBACI;AAAA,eACKF,YAAY,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADvB,EAEKE,UAAU,mBAAM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFrB,eAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,UAAU,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP,CAnDD;;GAAOD,W;;KAAAA,W;AAqDP,eAAeA,WAAf","sourcesContent":["import { Component, useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst  CommentArea =()=> {\r\nconst [comments,setComment]=useState([])\r\nconst [isLoading,setIsLoading]=useState(false)\r\nconst [isError,setIsError]=useState(false)\r\n\r\n// state = {\r\n//     comments: [], // comments will go here\r\n//     isLoading: false,\r\n//     isError: false\r\n// }\r\nconst \r\nuseEffect=((asin)=>{\r\n    getComment({asin})\r\n})\r\n    const getComment = async ({asin}) => {\r\n        if (asin !== asin) {\r\n            setIsLoading(true)\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\r\n                    headers: {\r\n                        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\r\n}\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    setComment({ comments: comments })\r\n                    setIsLoading(false)\r\n                    setIsError(true)\r\n                } else {\r\n                    console.log('error')\r\n                    // this.setState({ isLoading: false, isError: true })\r\n                    setIsLoading(false)\r\n                    setIsError(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                // this.setState({ isLoading: false, isError: true })\r\n                setIsLoading(false)\r\n                setIsError(true)\r\n            }\r\n        }\r\n    }\r\n        return (\r\n            <div>\r\n                {setIsLoading() && <Loading />}\r\n                {setIsError() && <Error />}\r\n                <AddComment />\r\n                <CommentList setComment={comments} />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}