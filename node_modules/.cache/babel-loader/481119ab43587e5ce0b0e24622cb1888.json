{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucam\\\\OneDrive\\\\Desktop\\\\excercise strive\\\\M4\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  const [comments, setComment] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false); // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n\n  useEffect(() => {\n    getComment();\n  }, [asin]);\n\n  const getComment = async ([asin]) => {\n    setIsLoading(true);\n\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json();\n        setComment(comments);\n        setIsLoading(false);\n        setIsError(false);\n      } else {\n        console.log('error'); // this.setState({ isLoading: false, isError: true })\n\n        setIsLoading(false);\n        setIsError(true);\n      }\n    } catch (error) {\n      console.log(error); // this.setState({ isLoading: false, isError: true })\n\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"WLXJ5lTfsNNl7J0g30chbxNfoEI=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/lucam/OneDrive/Desktop/excercise strive/M4/m4-d6-hw/src/components/CommentArea.jsx"],"names":["Component","useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","asin","comments","setComment","isLoading","setIsLoading","isError","setIsError","getComment","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAOC,WAAW,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAUC,UAAV,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAWC,YAAX,IAAyBX,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAqBb,QAAQ,CAAC,KAAD,CAAnC,CAH+B,CAK/B;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;;AAGI,QAAMO,UAAU,GAAG,OAAO,CAACP,IAAD,CAAP,KAAkB;AAC7BI,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACA,UAAII,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDT,IAA1D,EAAgE;AACtFU,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE;AADV;AAD6E,OAAhE,CAA1B;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,YAAIb,QAAQ,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAArB;AACAb,QAAAA,UAAU,CAAED,QAAF,CAAV;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALD,MAKO;AACHM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADG,CAEH;;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KAlBD,CAkBE,OAAOU,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EADY,CAEZ;;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GA1BL;;AA2BI,sBACI;AAAA,eACKH,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAc,MAAA,cAAc,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP,CAjDD;;GAAOF,W;;KAAAA,W;AAmDP,eAAeA,WAAf","sourcesContent":["import { Component, useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst  CommentArea =({asin})=> {\r\nconst [comments,setComment]=useState([])\r\nconst [isLoading,setIsLoading]=useState(false)\r\nconst [isError,setIsError]=useState(false)\r\n\r\n// state = {\r\n//     comments: [], // comments will go here\r\n//     isLoading: false,\r\n//     isError: false\r\n// }\r\n \r\nuseEffect(()=>{\r\n    getComment()\r\n}, [asin])\r\n    const getComment = async ([asin]) => {\r\n            setIsLoading(true)\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\r\n                    headers: {\r\n                        Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjA1MGFjY2RhNDBjOTAwMTVmYzhkNjkiLCJpYXQiOjE2NDQ5MzA4NjksImV4cCI6MTY0NjE0MDQ2OX0.F8ef5-xK7ZFB7W2qY8LgcamkOMBGkr2wWKo15Su0OKc\"\r\n}\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    setComment( comments )\r\n                    setIsLoading(false)\r\n                    setIsError(false)\r\n                } else {\r\n                    console.log('error')\r\n                    // this.setState({ isLoading: false, isError: true })\r\n                    setIsLoading(false)\r\n                    setIsError(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                // this.setState({ isLoading: false, isError: true })\r\n                setIsLoading(false)\r\n                setIsError(true)\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={asin}/>\r\n                <CommentList  commentsToShow={comments}/>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}